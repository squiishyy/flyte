name: Components Checks

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - 'datacatalog/**'
      - 'flyteadmin/**'
      - 'flytecopilot/**'
      - 'flyteplugins/**'
      - 'flytepropeller/**'
      - 'flytestdlib/**'
  push:
    branches:
      - master
    paths:
      - 'datacatalog/**'
      - 'flyteadmin/**'
      - 'flytecopilot/**'
      - 'flyteidl/**'
      - 'flyteplugins/**'
      - 'flytepropeller/**'
      - 'flytestdlib/**'
env:
  GO_VERSION: "1.19"
  PRIORITIES: "P0"
jobs:
  unpack-envvars:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.step.outputs.go-version }}
    steps:
      - id: step
        run: |
          echo "go-version=${{ env.GO_VERSION }}" >> $GITHUB_OUTPUT

  lint:
    name: Lint
    needs:
      - unpack-envvars
    strategy:
      fail-fast: false
      matrix:
        component:
          - datacatalog
          - flyteadmin
          # TODO(monorepo): Enable lint flytecopilot
          # - flytecopilot
          - flyteidl
          - flyteplugins
          - flytepropeller
          - flytestdlib
    uses: ./.github/workflows/lint.yml
    with:
      component: ${{ matrix.component }}
      go-version: ${{ needs.unpack-envvars.outputs.go-version }}
  unit-tests:
    name: Unit Tests
    needs:
      - unpack-envvars
    strategy:
      fail-fast: false
      matrix:
        component:
          - datacatalog
          - flyteadmin
          - flytecopilot
          - flyteplugins
          - flytepropeller
          - flytestdlib
    uses: ./.github/workflows/unit-tests.yml
    with:
      component: ${{ matrix.component }}
      go-version: ${{ needs.unpack-envvars.outputs.go-version }}
    secrets:
      FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}
  docker-build:
    strategy:
      fail-fast: false
      matrix:
        component:
          - datacatalog
          - flyteadmin
          - flytecopilot
          - flytepropeller
    name: Docker Build Images
    uses: ./.github/workflows/component_docker_build.yml
    with:
       component: ${{ matrix.component }}

  # TODO(monorepo): these tests are broken. They never test an actual change.
  # endtoend:
  #   name: End2End Test
  #   needs: [ docker-build ]
  #   uses: ./.github/workflows/end2end.yml
  #   with:
  #     # Reusing the output of the matrix is ok as they are essentially writing the same value (i.e. the directory artifacts are written + run id)
  #     cache_key: ${{ needs.docker-build.outputs.cache_key }}
  #     priorities: "P0"

  integration:
    name: Integration Test
    needs:
      - docker-build
      - unpack-envvars
    strategy:
      fail-fast: false
      matrix:
        component:
          - flyteadmin
    uses: ./.github/workflows/integration.yml
    with:
      component: ${{ matrix.component }}
      cache_key: ${{ needs.docker-build.outputs.cache_key }}
      go-version: ${{ needs.unpack-envvars.outputs.go-version }}

  generate:
    name: Check Go Generate
    needs:
      - unpack-envvars
    strategy:
      fail-fast: false
      matrix:
        component:
          - datacatalog
          - flyteadmin
          - flytecopilot
          - flytepropeller
    uses: ./.github/workflows/go_generate.yml
    with:
      component: ${{ matrix.component }}
      go-version: ${{ needs.unpack-envvars.outputs.go-version }}

  bump-tags:
    name: Bump git tags
    # TODO(monorepo): skip this if author is flyte-bot?
    if: ${{ github.event_name != 'pull_request' }}
    needs:
      - integration
      - lint
      - unit-tests
      - generate
    uses: ./.github/workflows/bump-tags.yml
    secrets:
      FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}

  # TODO(monorepo): we are not going to release any binary
  # goreleaser:
  #   name: Goreleaser
  #   needs: [ bump_version ] # Only to ensure it can successfully build
  #   uses: flyteorg/flytetools/.github/workflows/goreleaser.yml@master
  #   with:
  #     go-version: "1.19"
  #   secrets:
  #     FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}

  push_docker_image:
    name: Build & Push Image
    needs: [ bump-tags ]
    strategy:
      fail-fast: false
      matrix:
        component:
          - datacatalog
          - flyteadmin
          - flytecopilot
          - flytepropeller
          - flytescheduler
    uses: ./.github/workflows/publish.yml
    with:
      version: ${{ needs.bump-tags.outputs.next_version }}
      component: ${{ matrix.component }}
      dockerfile: Dockerfile.${{ matrix.component }}
      push: true
    secrets:
      FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}
      FLYTE_BOT_USERNAME: ${{ secrets.FLYTE_BOT_USERNAME }}
